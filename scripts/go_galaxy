#!/bin/bash
#==============================================================================
# Starburst99 / Galaxy Run Script
#==============================================================================
# This script sets up the environment and runs the Starburst99 population
# synthesis code (formerly known as Galaxy)
#
# Usage: 
#   1) Edit configuration variables below to match your system
#   2) Run with: ./go_galaxy [input_file] [output_prefix] [ext_number]
#   3) Results will be in output directory with specified prefix and extension
#==============================================================================

# Default configuration variables (edit these as needed)
#------------------------------------------------------------------------------
# Directory where the run is executed (current directory by default)
DRUN=$(pwd)

# Default input file if not specified on command line
INPUT_FILE="standard.input1"

# Default output file prefix
OUTPUT_PREFIX="standard"

# Default extension number for output files
EXT_NUM=1

# Base directory (parent of current directory)
BASE_DIR=".."

# Directory where the executable is located
CODE_DIR="${BASE_DIR}"

# Name of executable (kept as "galaxy" for backward compatibility)
CODE_NAME="galaxy"

# Directory where data libraries are located
DATA_DIR="${BASE_DIR}/data"

# Script directory
SCRIPTS_DIR="${BASE_DIR}/scripts"

# Display name for logging
PROGRAM_NAME="Starburst99 Population Synthesis Code"

# Version information
VERSION="7.1.0 - Fortran 2018 Edition"

#------------------------------------------------------------------------------
# Command line argument parsing
#------------------------------------------------------------------------------
# Allow overriding defaults with command-line arguments
if [ $# -ge 1 ]; then
  INPUT_FILE="$1"
fi

if [ $# -ge 2 ]; then
  OUTPUT_PREFIX="$2"
fi

if [ $# -ge 3 ]; then
  EXT_NUM="$3"
fi

#------------------------------------------------------------------------------
# Setup environment
#------------------------------------------------------------------------------
echo "Galaxy/Starburst99 Population Synthesis"
echo "========================================"
echo "Configuration:"
echo "- Input file:    $INPUT_FILE"
echo "- Output prefix: $OUTPUT_PREFIX"
echo "- Extension:     $EXT_NUM"
echo "- Code path:     $CODE_DIR/$CODE_NAME"
echo "- Data path:     $DATA_DIR"
echo ""

cd "$DRUN"

# Create symbolic links to data directories if they don't exist
echo "Setting up data directories..."
if [ ! -e tracks ]; then
  ln -s "$DATA_DIR/tracks" tracks
  echo "- Created link to tracks directory"
fi

if [ ! -e lejeune ]; then
  ln -s "$DATA_DIR/lejeune" lejeune
  echo "- Created link to lejeune directory"
fi

if [ ! -e auxil ]; then
  ln -s "$DATA_DIR/auxil" auxil
  echo "- Created link to auxil directory"
fi

#------------------------------------------------------------------------------
# Execute the code
#------------------------------------------------------------------------------
# Prepare output log file
echo "Job on $(hostname) started at $(date)" > time_used
echo "" >> time_used

# Link input file to fort.1 (standard Fortran unit for input)
if [ -e fort.1 ]; then
  rm fort.1
fi

if [ -e "$INPUT_FILE" ]; then
  ln -s "$INPUT_FILE" fort.1
  echo "- Linked $INPUT_FILE to fort.1"
else
  echo "ERROR: Input file $INPUT_FILE not found!"
  exit 1
fi

echo "Running Galaxy/Starburst99..."
# Run the code with timing information
(/usr/bin/time $CODE_DIR/$CODE_NAME) >> time_used 2>&1
RESULT=$?

if [ $RESULT -ne 0 ]; then
  echo "ERROR: Galaxy execution failed with status $RESULT"
  echo "Check time_used for error messages"
  exit $RESULT
fi

echo "" >> time_used

#------------------------------------------------------------------------------
# Save output files
#------------------------------------------------------------------------------
echo "Saving output files with prefix $OUTPUT_PREFIX and extension $EXT_NUM..."
$SCRIPTS_DIR/save_output $OUTPUT_PREFIX $EXT_NUM >> time_used
echo "Done at $(date)" >> time_used

echo "Execution completed successfully!"
echo "Results saved with prefix: $OUTPUT_PREFIX.$EXT_NUM"
echo "Log file: time_used"